openapi: 3.0.2
info:
  title: Zagreus Server API
  version: 0.0.1
  description: description of the zagreus server HTTP API
  license:
    name: MIT License
    url: 'https://github.com/mariokaufmann/zagreus/blob/main/LICENSE'
  x-logo:
    url: ''
servers:
  - url: 'http://localhost:58179'
paths:
  /api/version:
    summary: Get server version
    description: Returns the zagreus server version
    get:
      tags:
        - general
      responses:
        '200':
          content:
            text/plain:
              example: 0.0.1
          description: Version retrieved successfully.
  '/api/template/{templateName}':
    summary: Upload template
    description: >-
      Uploads the given packed template to the server. If the template was
      uploaded before it is replaced with the new version.
    post:
      requestBody:
        description: The packed template file to upload.
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                template.zip:
                  format: binary
                  type: string
      tags:
        - template
      operationId: uploadTemplate
      responses:
        '200':
          $ref: '#/components/responses/200'
    parameters:
      - $ref: '#/components/parameters/templateName'
  '/api/template/{templateName}/asset':
    summary: Manage template assets
    get:
      description: Returns a recursive list of the currently uploaded asset files for the template with the given name.
      tags:
        - template
      operationId: getAssets
      responses:
        '200':
          $ref: '#/components/responses/200'
    post:
      description: Uploads the given asset to the specified template so that it can be used in the template.
      requestBody:
        description: The asset file to upload.
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                file:
                  format: binary
                  type: string
      tags:
        - template
      operationId: uploadAsset
      responses:
        '200':
          content:
            application/json:
              example: ["asset1.png", "main.css"]
          description: Asssets retrieved successfully.
    parameters:
      - $ref: '#/components/parameters/templateName'
  '/api/template/{templateName}/data/text':
    summary: Set the text content of a text element
    description: 'Searches for an element with the given id and sets its text content to the given value'
    parameters:
      - $ref: '#/components/parameters/templateName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                text:
                  type: string
              example:
                id: ScoreboardTimeText
                text: '12:15'
      tags:
        - data
      operationId: setText
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/template/{templateName}/data/class/add':
    summary: Adds a CSS class to an element
    description: 'Searches for an element with the given id and adds the given CSS class from the element'
    parameters:
      - $ref: '#/components/parameters/templateName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                class:
                  type: string
              example:
                id: Scoreboard
                class: 'active-element'
      tags:
        - data
      operationId: addClass
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/template/{templateName}/data/class/remove':
    summary: Removes a CSS class from an element
    description: 'Searches for an element with the given id and removes the given CSS class from the element'
    parameters:
      - $ref: '#/components/parameters/templateName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                class:
                  type: string
              example:
                id: Scoreboard
                class: 'active-element'
      tags:
        - data
      operationId: removeClass
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/template/{templateName}/data/animation/{animationName}':
    summary: Execute an animation
    description: 'Executes the animation with the given name'
    parameters:
      - $ref: '#/components/parameters/templateName'
      - name: animationName
        required: true
        in: path
        description: The name of the animation
        example: ScoreboardHide
        schema:
          type: string
    post:
      tags:
        - data
      operationId: executeAnimation
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/template/{templateName}/data/image':
    summary: Set source of image element
    description: 'Searches for the image element with the given id and sets its source to the given asset'
    parameters:
      - $ref: '#/components/parameters/templateName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                asset:
                  type: string
              example:
                id: ScoreboardTeamImage
                asset: 'logo.png'
      tags:
        - data
      operationId: setImageSource
      responses:
        '200':
          $ref: '#/components/responses/200'
components:
  parameters:
    templateName:
      example: my-template
      name: templateName
      description: The name of a template.
      schema:
        description: >-
          A template name must consist of more than zero alphanumeric or '-'
          characters.
        pattern: '^[\-a-z0-9]+$'
        type: string
        example: my-template
      in: path
      required: true
  responses:
    '200':
      description: Operation succeeded
tags:
  - name: general
    description: General operations
  - name: template
    description: Operations for managing templates
  - name: data
    description: Operations for manipulating the data in a template
externalDocs:
  description: Source repository
  url: 'https://github.com/mariokaufmann/zagreus'
security: []
